# copying the repo
- name: copying the {{COMPONENT}} repo
  ansible.builtin.copy :
    src: mysql.repo
    dest: /etc/yum.repos.d/mysql.repo

# installing the sql
- name: Install {{COMPONENT}}
  ansible.builtin.package:  
    name: 
      - mysql-community-server
      - MySQL-python            
    state: present
## installing MYsl-python to use it foe db password check "community.mysql.mysql_info"

- name: Enabling and starting {{COMPONENT}}
  ansible.builtin.service:
    name: mysqld
    state: started
    enabled: yes

## resetting the password
- name: checking the DB Password
  community.mysql.mysql_info:
    login_user: root
    login_password: RoboShop@1
  ignore_errors: yes
  register: mysql_stat

- name: Rest password block
  when: mysql_stat.failed
  block:
    - name: Resetting the DB Password
      ansible.builtin.shell: grep "temporary password" /var/log/mysqld.log | awk '{print $NF}'
      register: DEFAULT_ROOT_PASSWORD

    - name: Copy the sql password to tmp file
      ansible.builtin.copy:
        src: rootpass.sql
        dest: /tmp/rootpass.sql
    
    - name: Resetting mysql password
      ansible.builtin.shell: mysql --connect-expired-password -uroot -p"{{DEFAULT_ROOT_PASSWORD.stdout}}" < /tmp/rootpass.sql
    
## uninstall plugin

- name: password_validate plugin is installed or not validate
  ansible.builtin.shell: show plugins | mysql -uroot -pRoboShop@1 | grep validate_password
  register: PLUG_YESNO
  ignore_errors: yes

- name: uninstall password_validate plugin
  when: PLUG_YESNO.rc == 0   # .rc is the exit code in ansible output 
  block:
    - name: copy uninstall_plugin command to temp file
      ansible.builtin.copy:
      src: uninstallplugin.sql
      dest: /tmp/uninstallplugin.sql
  
    - name: uninstall plugin if installed
      ansible.builtin.shell: mysql --connect-expired-password -uroot -pRoboShop@1 < /tmp/uninstallplugin.sql




    